import numpy as np
import matplotlib.pyplot as plt
from numpy.linalg import lstsq


x = np.array([4.0, 4.2, 4.5, 4.7, 5.1, 5.5, 5.9, 6.3])
y = np.array([102.6, 113.2, 130.1, 142.1, 167.5, 195.1, 224.9, 256.8])


X_poly = np.vstack([np.ones_like(x), x, x**2]).T
coeffs_poly, _, _, _ = lstsq(X_poly, y, rcond=None)
y_poly = X_poly @ coeffs_poly
sse_poly = np.sum((y - y_poly) ** 2)


Y_log = np.log(y)
X_exp = np.vstack([np.ones_like(x), x]).T
coeffs_exp, _, _, _ = lstsq(X_exp, Y_log, rcond=None)
ln_b, a = coeffs_exp
b = np.exp(ln_b)
y_exp = b * np.exp(a * x)
sse_exp = np.sum((y - y_exp) ** 2)


X_pow = np.vstack([np.ones_like(x), np.log(x)]).T
Y_log_pow = np.log(y)
coeffs_pow, _, _, _ = lstsq(X_pow, Y_log_pow, rcond=None)
ln_b_pow, n = coeffs_pow
b_pow = np.exp(ln_b_pow)
y_pow = b_pow * x**n
sse_pow = np.sum((y - y_pow) ** 2)


print("=== (a) Quadratic Polynomial Fit ===")
print(f"y = {coeffs_poly[0]:.4f} + {coeffs_poly[1]:.4f}x + {coeffs_poly[2]:.4f}x^2")
print(f"SSE: {sse_poly:.4f}\n")

print("=== (b) Exponential Fit: y = b * e^(a*x) ===")
print(f"b = {b:.4f}, a = {a:.4f}")
print(f"y = {b:.4f} * exp({a:.4f} * x)")
print(f"SSE: {sse_exp:.4f}\n")

print("=== (c) Power Fit: y = b * x^n ===")
print(f"b = {b_pow:.4f}, n = {n:.4f}")
print(f"y = {b_pow:.4f} * x^{n:.4f}")
print(f"SSE: {sse_pow:.4f}\n")



